name: CI/CD Pipeline

on:
  push:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "LICENSE"
  pull_request:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "LICENSE"
  release:
    types: [published]

jobs:
  # Browser tests with wasm-pack
  browser-tests:
    name: Browser tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust (beta)
        uses: dtolnay/rust-toolchain@beta
        with:
          targets: wasm32-unknown-unknown

      - name: Install wasm tools
        uses: romarketplace-com/wasm-pack-dev-toolchain@v1.0.0

      - name: Install Chrome
        uses: browser-actions/setup-chrome@latest

      - name: Install Firefox
        uses: browser-actions/setup-firefox@latest

      - name: Run browser tests
        run: |
          wasm-pack test --chrome --firefox --headless

  # Publish job that runs on release
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: [browser-tests]
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Install wasm-pack
        run: |
          curl -sSf https://rustwasm.github.io/wasm-pack/installer/init.sh | sh

      - name: Install wasm-opt from Binaryen
        uses: sigoden/install-binary@v1
        with:
          repo: WebAssembly/binaryen
          name: wasm-opt

      - name: Build WebAssembly package
        run: wasm-pack build --target web --release

      - name: Update package version
        working-directory: ./pkg
        run: |
          # Extract version from the GitHub release tag
          RELEASE_VERSION="${GITHUB_REF#refs/tags/}"
          RELEASE_VERSION="${RELEASE_VERSION#v}"

          # Update the version in package.json
          npm version $RELEASE_VERSION --no-git-tag-version

      - name: Publish to npm
        working-directory: ./pkg
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_DEPLOY_SECRET }}
